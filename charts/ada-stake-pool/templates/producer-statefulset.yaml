---
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  labels:
    app: {{ template "ada-stake-pool.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "ada-stake-pool.fullname" . }}-producer
spec:
  replicas: {{ default 2 .Values.producer.replicas }}
  selector:
    matchLabels:
      app: {{ template "ada-stake-pool.fullname" . }}
      release: "{{ .Release.Name }}"
      component: producer
  serviceName: {{ template "ada-stake-pool.fullname" . }}-producer
  template:
    metadata:
      labels:
        app: {{ template "ada-stake-pool.fullname" . }}
        release: "{{ .Release.Name }}"
        component: producer
    spec:
      serviceAccountName: producer
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      containers:
        - name: producer
          image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          env:
            - name: NODE_NAME
              value: producer
            - name: NODE_TOPOLOGY
              value: "relay.{{ .Release.Namespace }}.svc.cluster.local:3000/1"
            - name: CREATE_STAKEPOOL
              value: "True"         
            - name: METADATA_URL
              value: "{{ .Values.pool.metadata }}"  
            - name: HOST_ADDR
              value: '0.0.0.0'      
            - name: PUBLIC_RELAY_IP # This is used to inform registration
              value: {{ default "" .Values.relay.service.loadBalancerIP | quote }}
            - name: PUBLIC_RELAY_PORT # This is used to inform registration
              value: {{ default "3000" .Values.relay.service.port | quote }}
            - name: POOL_PLEDGE
              value: "{{ .Values.pool.pledge }}"
            - name: POOL_COST
              value: "{{ .Values.pool.cost }}"
            - name: POOL_MARGIN
              value: "{{ .Values.pool.margin }}"
          args: 
            - "--start"
            - "--staking"
          resources:
{{ toYaml .Values.producer.resources | indent 12 }}
          ports:
            - containerPort: 3000
              protocol: "TCP"
              name: "cardano-node"
          volumeMounts:
            - name: "data"
              readOnly: false
              mountPath: "/config/main-producer"
          readinessProbe:
            exec:
              command: 
              - timeout
              - 5s
              - /scripts/readiness_probe.sh
            initialDelaySeconds: 60
            timeoutSeconds: 10
            failureThreshold: 3 
          lifecycle:
            preStop:
              exec:
                # Currently this does nothing, but when cardano-node supports it, it _should_ gracefully terminate
                # so that subsequent startups are faster
                command: ["/usr/local/bin/cardano-cli","shelley","system","stop"]              
      restartPolicy: "Always"
      securityContext:
        fsGroup: 65534            
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "{{ template "ada-stake-pool.name" . }}"
          component: "producer"
          release: {{ .Release.Name | quote }}
          heritage: {{ .Release.Service | quote }}
      spec:
        accessModes:
        {{- range .Values.producer.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}      
        resources:
          requests:
            storage: {{ .Values.producer.persistence.size | quote }}