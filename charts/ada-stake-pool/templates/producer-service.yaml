apiVersion: v1
kind: Service
metadata:
  name: producer
  labels: {{- include "common.labels.standard" . | nindent 4 }}
  {{- if .Values.producer.service.annotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.producer.service.annotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.producer.service.type }}
  {{- if (or (eq .Values.producer.service.type "LoadBalancer") (eq .Values.producer.service.type "NodePort")) }}
  externalTrafficPolicy: {{ .Values.producer.service.externalTrafficPolicy | quote }}
  {{- end }}
  {{- if eq .Values.producer.service.type "LoadBalancer" }}
  loadBalancerIP: {{ default "" .Values.producer.service.loadBalancerIP | quote }}
  {{- end }}
  ports:
    - name: cardano-node
      port: {{ .Values.producer.service.port }}
      targetPort: cardano-node
      {{- if (and (or (eq .Values.producer.service.type "NodePort") (eq .Values.producer.service.type "LoadBalancer")) (not (empty .Values.producer.service.nodePorts.http))) }}
      nodePort: {{ .Values.producer.service.nodePorts.http }}
      {{- else if eq .Values.producer.service.type "ClusterIP" }}
      nodePort: null
      {{- end }}
    {{- if .Values.producer.service.extraPorts }}
    {{- include "common.tplvalues.render" (dict "value" .Values.producer.service.extraPorts "context" $) | nindent 4 }}
    {{- end }}
  selector:
    app: {{ template "ada-stake-pool.fullname" . }}
    release: "{{ .Release.Name }}"
    component: producer    